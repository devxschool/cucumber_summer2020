<?xml version="1.0" encoding="UTF-8"?>
<!--
    pom.xml is the main driver of maven projects.
  here we configure our project name. company, our project version.
  which dependecies(libraries) we want to import to our project.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.devxschool</groupId>
    <artifactId>cucumber_summer2020</artifactId>
    <version>1.0</version>

    <properties>
        <!-- Maven uses jdk 6 by default which dont support newly added features like overriding interface methods, lambdas -->
        <!-- so we are changing jdk to 1.8 -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope> <!-- make this library available only in test src folder -->
        </dependency>

        <!-- Cucumber libraries -->
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>1.2.5</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/info.cukes/cucumber-junit -->
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.2.5</version>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-core</artifactId>
            <version>1.2.6</version>
        </dependency>
    </dependencies>

    <!--default plugins

        what are plugins?
        plugins are libraries similar to dependencies
        difference is dependencies are used by programmers to code by using exisiting functionalities coming from outisde libraries

        plugins on other hand dont require extra coding these are features that get executed and performed while building the project in
        mvn phases like test, package etc.

        by default maven has surefire plugin which scans all classes in test src folder which end with Test word.
        and if those classes have @Test annotations maven will run them and if all tests pass then maven
        will allow you to create a jar file otherwise it wont.
     -->

    <!-- build tag is used for project building configurations and plugins -->
    <profiles>
        <profile>
            <id>regression</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- surefire plugin is used for running all tests (under test folder) within the project while building the project(mvn clean install) in test phase -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.21.0</version>
                        <configuration>
                            <!-- which test classes do you want to include in the surefire plugin run in test phase -->
                            <includes>
                                <!-- ** means anywhere under project directory -->
                                <include>**/RegressionRunner.java</include>
                            </includes>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                    </plugin>


                    <!-- cucumber reporting plugin which will generate nice reporting -->
                    <plugin>
                        <groupId>net.masterthought</groupId>
                        <artifactId>maven-cucumber-reporting</artifactId>
                        <version>2.8.0</version>
                        <!-- how should this plugin be executed -->
                        <executions>
                            <execution>
                                <id>execution</id>
                                <!-- which phase this plugin should be executed? -->
                                <phase>verify</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <!-- here give configuration for the report like name, where the plugin should find cucumber.json(from runner class)
                                and where the final nice report should be created(generated)? -->
                                <configuration>
                                    <!-- what ever we put here will appear in the report title -->
                                    <projectName>Bank Regression Tests</projectName>
                                    <!-- where the nice report should be generated in? -->
                                    <!-- ${project.build.directory} means target folder -->
                                    <outputDirectory>${project.build.directory}/cucumber-report-pie-chart
                                    </outputDirectory>
                                    <!-- which cucumber junit statistics from runner class should I use? -->
                                    <cucumberOutput>${project.build.directory}/cucumber.json</cucumberOutput>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>



        <profile>
            <id>smoke</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- surefire plugin is used for running all tests (under test folder) within the project while building the project(mvn clean install) in test phase -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.21.0</version>
                        <configuration>
                            <!-- which test classes do you want to include in the surefire plugin run in test phase -->
                            <includes>
                                <!-- ** means anywhere under project directory -->
                                <include>**/SmokeRunner.java</include>
                            </includes>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                    </plugin>


                    <!-- cucumber reporting plugin which will generate nice reporting -->
                    <plugin>
                        <groupId>net.masterthought</groupId>
                        <artifactId>maven-cucumber-reporting</artifactId>
                        <version>2.8.0</version>
                        <!-- how should this plugin be executed -->
                        <executions>
                            <execution>
                                <id>execution</id>
                                <!-- which phase this plugin should be executed? -->
                                <phase>verify</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <!-- here give configuration for the report like name, where the plugin should find cucumber.json(from runner class)
                                and where the final nice report should be created(generated)? -->
                                <configuration>
                                    <!-- what ever we put here will appear in the report title -->
                                    <projectName>Bank Smoke Tests</projectName>
                                    <!-- where the nice report should be generated in? -->
                                    <!-- ${project.build.directory} means target folder -->
                                    <outputDirectory>${project.build.directory}/cucumber-report-pie-chart
                                    </outputDirectory>
                                    <!-- which cucumber junit statistics from runner class should I use? -->
                                    <cucumberOutput>${project.build.directory}/cucumber.json</cucumberOutput>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
<!--  how to run regression on terminal -> mvn clean install -Pregression
      how to run smoke on terminal -> mvn clean install -Psmoke-->
        <!--
            <opening tag>values</closing tag>
            <opening tag aributeName=attributeValue, >



            {

            }

        -->